{"version":3,"sources":["Components/Display.js","Components/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","className","id","time","h","m","s","Buttons","status","onClick","start","stop","wait","reset","App","useState","setTime","interv","setInterv","setStatus","run","setInterval","updatedS","updatedM","updatedH","useEffect","debouncedWait","debounce","clearInterval","debouncedReset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2571879.chunk.js","sourcesContent":["import React from 'react';\n\nconst Display = props => {\n  return (\n    <div className=\"fiels-container\" id=\"timer-1\">\n      <div className=\"field\">\n        <span className=\"value\" data-value=\"hours\">\n          {props.time.h >= 10 ? props.time.h : '0' + props.time.h}\n        </span>\n        <span className=\"separator\">:</span>\n      </div>\n\n      <div className=\"field\">\n        <span className=\"value\" data-value=\"mins\">\n          {props.time.m >= 10 ? props.time.m : '0' + props.time.m}\n        </span>\n        <span className=\"separator\">:</span>\n      </div>\n\n      <div className=\"field\">\n        <span className=\"value\" data-value=\"secs\">\n          {props.time.s >= 10 ? props.time.s : '0' + props.time.s}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Display;\n","import React from 'react';\n\nconst Buttons = props => {\n  return (\n    <div className=\"button-container\">\n      {props.status === 0 ? (\n        <button className=\"btn btn-green\" onClick={props.start}>\n          Start\n        </button>\n      ) : (\n        ''\n      )}\n\n      {props.status === 1 ? (\n        <div>\n          <button className=\"btn btn-red\" onClick={props.stop}>\n            Stop\n          </button>\n          <button className=\"btn btn-yellow\" onClick={props.wait}>\n            {props.status === 2 ? 'Continue' : 'Wait'}\n          </button>\n          <button className=\"btn btn-green\" onClick={props.reset}>\n            Reset\n          </button>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {props.status === 2 ? (\n        <div>\n          <button className=\"btn btn-red\" onClick={props.stop}>\n            Stop\n          </button>\n          <button className=\"btn btn-yellow\" onClick={props.wait}>\n            {props.status === 2 ? 'Continue' : 'Wait'}\n          </button>\n          <button className=\"btn btn-green\" onClick={props.reset}>\n            Reset\n          </button>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {props.status === 3 ? (\n        <div>\n          <button className=\"btn btn-red\" onClick={props.stop}>\n            Stop\n          </button>\n          <button className=\"btn btn-yellow\" onClick={props.wait}>\n            {props.status === 2 ? 'Continue' : 'Wait'}\n          </button>\n          <button className=\"btn btn-green\" onClick={props.reset}>\n            Reset\n          </button>\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nexport default Buttons;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport debounce from 'lodash.debounce';\n//import { Observable } from 'rxjs';\n\nimport Display from './Components/Display';\nimport Buttons from './Components/Buttons';\n//import { interval } from 'rxjs';\n\nfunction App() {\n  const [time, setTime] = useState({ s: 0, m: 0, h: 0 });\n  const [interv, setInterv] = useState(null);\n  const [status, setStatus] = useState(0);\n  // 0 - not started,\n  // 1 - started,\n  // 2 - waited,\n  // 3 - reseted\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 1000));\n  };\n\n  let updatedS = time.s,\n    updatedM = time.m,\n    updatedH = time.h;\n\n  const run = () => {\n    if (updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n    if (updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n    updatedS++;\n    return setTime({ s: updatedS, m: updatedM, h: updatedH });\n  };\n\n  useEffect(() => {\n    if (status === 3) {\n      start();\n    }\n  }, [start, status]);\n\n  const stop = () => {\n    clearInterval(interv);\n    setTime({ s: 0, m: 0, h: 0 });\n    setStatus(0);\n  };\n\n  const wait = () => {\n    if (status === 1) {\n      clearInterval(interv);\n      setStatus(2);\n    } else {\n      start();\n    }\n  };\n\n  const debouncedWait = debounce(wait, 300);\n\n  const reset = () => {\n    switch (status) {\n      case 1:\n        clearInterval(interv);\n        setTime({ s: 0, m: 0, h: 0 });\n        setStatus(3);\n        break;\n      case 2:\n        setTime({ s: 0, m: 0, h: 0 });\n        setStatus(3);\n        break;\n\n      default:\n        break;\n    }\n\n    clearInterval(interv);\n  };\n\n  const debouncedReset = debounce(reset, 300);\n\n  return (\n    <div className=\"container\">\n      <div className=\"stopwatch\">\n        <Display time={time} />\n        <Buttons\n          status={status}\n          wait={debouncedWait}\n          reset={debouncedReset}\n          stop={stop}\n          start={start}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}